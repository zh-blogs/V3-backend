// Code generated by MockGen. DO NOT EDIT.
// Source: interface.go

// Package mock_provider is a generated GoMock package.
package mock_provider

import (
	types "github/zhblogs/backend/provider/types"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockProvider is a mock of Provider interface.
type MockProvider struct {
	ctrl     *gomock.Controller
	recorder *MockProviderMockRecorder
}

// MockProviderMockRecorder is the mock recorder for MockProvider.
type MockProviderMockRecorder struct {
	mock *MockProvider
}

// NewMockProvider creates a new mock instance.
func NewMockProvider(ctrl *gomock.Controller) *MockProvider {
	mock := &MockProvider{ctrl: ctrl}
	mock.recorder = &MockProviderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockProvider) EXPECT() *MockProviderMockRecorder {
	return m.recorder
}

// GetFeatureBlogs mocks base method.
func (m *MockProvider) GetFeatureBlogs() []types.BlogSimple {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetFeatureBlogs")
	ret0, _ := ret[0].([]types.BlogSimple)
	return ret0
}

// GetFeatureBlogs indicates an expected call of GetFeatureBlogs.
func (mr *MockProviderMockRecorder) GetFeatureBlogs() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetFeatureBlogs", reflect.TypeOf((*MockProvider)(nil).GetFeatureBlogs))
}
